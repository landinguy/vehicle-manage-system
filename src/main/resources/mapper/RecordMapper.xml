<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.vehiclemanage.dao.RecordMapper">
  <resultMap id="BaseResultMap" type="com.example.vehiclemanage.entity.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="plate_number" jdbcType="VARCHAR" property="plateNumber" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="payment_status" jdbcType="INTEGER" property="paymentStatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="fine" jdbcType="VARCHAR" property="fine" />
    <result column="payment_ts" jdbcType="VARCHAR" property="paymentTs" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, plate_number, time, reason, payment_status, status, fine, payment_ts
  </sql>
  <select id="selectByExample" parameterType="com.example.vehiclemanage.entity.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageNo != null and pageSize != null">
      limit #{pageNo},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.vehiclemanage.entity.RecordExample">
    delete from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.vehiclemanage.entity.Record">
    insert into record (id, uid, plate_number, 
      time, reason, payment_status, 
      status, fine, payment_ts
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{plateNumber,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{paymentStatus,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{fine,jdbcType=VARCHAR}, #{paymentTs,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.vehiclemanage.entity.Record">
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="plateNumber != null">
        plate_number,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="fine != null">
        fine,
      </if>
      <if test="paymentTs != null">
        payment_ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="plateNumber != null">
        #{plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=VARCHAR},
      </if>
      <if test="paymentTs != null">
        #{paymentTs,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.vehiclemanage.entity.RecordExample" resultType="java.lang.Long">
    select count(*) from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.plateNumber != null">
        plate_number = #{record.plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentStatus != null">
        payment_status = #{record.paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.fine != null">
        fine = #{record.fine,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTs != null">
        payment_ts = #{record.paymentTs,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update record
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      plate_number = #{record.plateNumber,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      payment_status = #{record.paymentStatus,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      fine = #{record.fine,jdbcType=VARCHAR},
      payment_ts = #{record.paymentTs,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.vehiclemanage.entity.Record">
    update record
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="plateNumber != null">
        plate_number = #{plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=VARCHAR},
      </if>
      <if test="paymentTs != null">
        payment_ts = #{paymentTs,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.vehiclemanage.entity.Record">
    update record
    set uid = #{uid,jdbcType=INTEGER},
      plate_number = #{plateNumber,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      payment_status = #{paymentStatus,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      fine = #{fine,jdbcType=VARCHAR},
      payment_ts = #{paymentTs,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>