<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.vehiclemanage.dao.VehicleMapper">
  <resultMap id="BaseResultMap" type="com.example.vehiclemanage.entity.Vehicle">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="plate_number" jdbcType="VARCHAR" property="plateNumber" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="create_ts" jdbcType="VARCHAR" property="createTs" />
    <result column="update_ts" jdbcType="VARCHAR" property="updateTs" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="buy_ts" jdbcType="VARCHAR" property="buyTs" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, plate_number, uid, username, create_ts, update_ts, type, buy_ts, description
  </sql>
  <select id="selectByExample" parameterType="com.example.vehiclemanage.entity.VehicleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vehicle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageNo != null and pageSize != null">
      limit #{pageNo},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vehicle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vehicle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.vehiclemanage.entity.VehicleExample">
    delete from vehicle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.vehiclemanage.entity.Vehicle">
    insert into vehicle (id, name, plate_number,
      uid, username, create_ts,
      update_ts, type, buy_ts,
      description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{plateNumber,jdbcType=VARCHAR},
      #{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{createTs,jdbcType=VARCHAR},
      #{updateTs,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{buyTs,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.vehiclemanage.entity.Vehicle">
    insert into vehicle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="plateNumber != null">
        plate_number,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="createTs != null">
        create_ts,
      </if>
      <if test="updateTs != null">
        update_ts,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="buyTs != null">
        buy_ts,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="plateNumber != null">
        #{plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createTs != null">
        #{createTs,jdbcType=VARCHAR},
      </if>
      <if test="updateTs != null">
        #{updateTs,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="buyTs != null">
        #{buyTs,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.vehiclemanage.entity.VehicleExample" resultType="java.lang.Long">
    select count(*) from vehicle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vehicle
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.plateNumber != null">
        plate_number = #{record.plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.createTs != null">
        create_ts = #{record.createTs,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTs != null">
        update_ts = #{record.updateTs,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.buyTs != null">
        buy_ts = #{record.buyTs,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vehicle
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      plate_number = #{record.plateNumber,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      create_ts = #{record.createTs,jdbcType=VARCHAR},
      update_ts = #{record.updateTs,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      buy_ts = #{record.buyTs,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.vehiclemanage.entity.Vehicle">
    update vehicle
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="plateNumber != null">
        plate_number = #{plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createTs != null">
        create_ts = #{createTs,jdbcType=VARCHAR},
      </if>
      <if test="updateTs != null">
        update_ts = #{updateTs,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="buyTs != null">
        buy_ts = #{buyTs,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.vehiclemanage.entity.Vehicle">
    update vehicle
    set name = #{name,jdbcType=VARCHAR},
      plate_number = #{plateNumber,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      create_ts = #{createTs,jdbcType=VARCHAR},
      update_ts = #{updateTs,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      buy_ts = #{buyTs,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>